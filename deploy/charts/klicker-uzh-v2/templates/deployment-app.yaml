apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-frontend-pwa
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend-pwa
spec:
  {{- with .Values.frontendPWA.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if not .Values.frontendPWA.autoscaling.enabled }}
  replicas: {{ .Values.frontendPWA.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend-pwa
  template:
    metadata:
      {{- with .Values.frontendPWA.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend-pwa
    spec:
      priorityClassName: {{ include "chart.fullname" . }}-{{ .Values.frontendPWA.priorityClassName }}
      {{- with .Values.frontendPWA.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontendPWA.podSecurityContext | nindent 8 }}
      containers:
        - name: frontend-pwa
          securityContext:
            {{- toYaml .Values.frontendPWA.securityContext | nindent 12 }}
          image: "{{ .Values.frontendPWA.image.repository }}:{{ .Values.frontendPWA.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontendPWA.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-config-frontend-pwa
            - secretRef:
                name: {{ include "chart.fullname" . }}-secret-frontend-pwa
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.frontendPWA.resources | nindent 12 }}
      {{- with .Values.frontendPWA.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontendPWA.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontendPWA.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-frontend-manage
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend-manage
spec:
  {{- with .Values.frontendManage.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if not .Values.frontendManage.autoscaling.enabled }}
  replicas: {{ .Values.frontendManage.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend-manage
  template:
    metadata:
      {{- with .Values.frontendManage.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend-manage
    spec:
      priorityClassName: {{ include "chart.fullname" . }}-{{ .Values.frontendManage.priorityClassName }}
      {{- with .Values.frontendManage.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontendManage.podSecurityContext | nindent 8 }}
      containers:
        - name: frontend-manage
          securityContext:
            {{- toYaml .Values.frontendManage.securityContext | nindent 12 }}
          image: "{{ .Values.frontendManage.image.repository }}:{{ .Values.frontendManage.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontendManage.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-config-frontend-manage
            - secretRef:
                name: {{ include "chart.fullname" . }}-secret-frontend-manage
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.frontendManage.resources | nindent 12 }}
      {{- with .Values.frontendManage.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontendManage.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontendManage.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-backend-graphql
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend-graphql
spec:
  {{- with .Values.backendGraphql.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if not .Values.backendGraphql.autoscaling.enabled }}
  replicas: {{ .Values.backendGraphql.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend-graphql
  template:
    metadata:
      {{- with .Values.backendGraphql.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend-graphql
    spec:
      priorityClassName: {{ include "chart.fullname" . }}-{{ .Values.backendGraphql.priorityClassName }}
      {{- with .Values.backendGraphql.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backendGraphql.podSecurityContext | nindent 8 }}
      containers:
        - name: backend-graphql
          securityContext:
            {{- toYaml .Values.backendGraphql.securityContext | nindent 12 }}
          image: "{{ .Values.backendGraphql.image.repository }}:{{ .Values.backendGraphql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backendGraphql.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              value: production
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-config-backend-graphql
            - secretRef:
                name: {{ include "chart.fullname" . }}-secret-backend-graphql
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.backendGraphql.resources | nindent 12 }}
      {{- with .Values.backendGraphql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backendGraphql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backendGraphql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
