teamsWebhookUrl: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

notifications:
  url: ''
  secret: ''
  supportEmail: ''

eduId:
  clientSecret: ''

blobStorage:
  accountName: ''
  accessKey: ''

migration:
  secret: ''
  mongo:
    connectionString: ''
  serviceBus:
    connectionString: ''
    queueName: ''

listmonk:
  url: ''
  username: ''
  password: ''
  templates:
    migrationRequest: -1
    emailNotFound: -1

vapid:
  publicKey: ''
  privateKey: ''

cron:
  dailyGroupScores: "* * * * *"
  pushNotifications: "*/5 * * * *"
  practiceQuizPublications: "*/5 * * * *"
  token: ""

auth:
  priorityClassName: production-workload

  replicaCount: 1

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/auth
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 400m
      memory: 400Mi

  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontendPWA:
  priorityClassName: production-workload

  replicaCount: 3

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/frontend-pwa
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontendManage:
  priorityClassName: production-workload

  replicaCount: 2

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/frontend-manage
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

frontendControl:
  priorityClassName: production-workload

  replicaCount: 1

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/frontend-control
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

backendGraphql:
  priorityClassName: production-workload

  replicaCount: 3

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/backend-docker
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 1000m
      memory: 1000Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

lti:
  priorityClassName: production-workload

  replicaCount: 2

  clientId:
  redirectURL:
  cookieDomain:
  encryptionKey:

  port: 4000

  db:
    type: postgres
    host:
    port:
    name:
    username:
    password:
    connectionString:

  image:
    repository: ghcr.io/uzh-bf/klicker-uzh/lti
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 4000

  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt

  resources:
    requests:
      cpu: 200m
      memory: 200Mi
    limits:
      cpu: 500m
      memory: 500Mi

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

heartbeats:
  dailyGroupScores:
