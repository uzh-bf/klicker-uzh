repositories:
- name: bitnami
  url: https://charts.bitnami.com/bitnami

releases:
  - name: klicker-v2-prod
    namespace: klicker-v2-prod
    createNamespace: true
    chart: ../charts/klicker-uzh-v2
    version: '{{ env "CHART_VERSION" | default "0.1.0" }}'
    installed: true
    kubeContext: klicker-k8scbfdbd7c
    values:
      - values.yaml
      - appSecret: '{{ requiredEnv "APP_SECRET" }}'
        cron:
          token: '{{ requiredEnv "CRON_TOKEN" }}'

        eduId:
          clientSecret: '{{ requiredEnv "EDUID_CLIENT_SECRET" }}'

        auth:
          replicaCount: 1
          image:
            tag: '{{ requiredEnv "APP_VERSION" }}'

        frontendPWA:
          replicaCount: 1
          image:
            tag: '{{ requiredEnv "APP_VERSION" }}'

          sentryEnv: production
          sentryDSN: '{{ env "SENTRY_DSN_PWA" }}'

        frontendManage:
          replicaCount: 1
          image:
            tag: '{{ requiredEnv "APP_VERSION" }}'

          sentryEnv: production
          sentryDSN: '{{ env "SENTRY_DSN_MANAGE" }}'

        frontendControl:
          replicaCount: 1
          image:
            tag: '{{ requiredEnv "APP_VERSION" }}'

          sentryEnv: production
          sentryDSN: '{{ env "SENTRY_DSN_CONTROL" }}'


        backendGraphql:
          replicaCount: 1
          image:
            tag: '{{ requiredEnv "APP_VERSION" }}'

          apiDomain: '{{ requiredEnv "API_DOMAIN" }}'
          cookieDomain: '{{ requiredEnv "COOKIE_DOMAIN" }}'
          databaseUrl: '{{ requiredEnv "DATABASE_URL" }}'

          notifications:
            url: '{{ requiredEnv "NOTIFICATION_URL" }}'
            secret: '{{ requiredEnv "NOTIFICATION_SECRET" }}'
            supportEmail: '{{ requiredEnv "NOTIFICATION_SUPPORT_EMAIL" }}'

          vapid:
            publicKey: '{{ requiredEnv "VAPID_PUBLIC_KEY" }}'
            privateKey: '{{ requiredEnv "VAPID_PRIVATE_KEY" }}'

          redisCache:
            host: klicker-v2-prod-redis-master
            port: 6379
            tls: false
            pass: ''

          redisExec:
            host: '{{ requiredEnv "REDIS_HOST" }}'
            port: '{{ requiredEnv "REDIS_PORT" }}'
            tls: '{{ requiredEnv "REDIS_TLS" }}'
            pass: '{{ requiredEnv "REDIS_PASS" }}'

          sentryEnv: production
          sentryDSN: '{{ env "SENTRY_DSN" }}'
