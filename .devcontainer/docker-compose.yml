version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile

    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:postgres

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  reverse_proxy_docker:
    image: docker.io/library/traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.file=true
      - --providers.file.filename=/etc/traefik/rules.yaml
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
    ports:
      - 8088:80
      - 8080:8080
    volumes:
      - '../util/traefik/rules_devcontainer.yaml:/etc/traefik/rules.yaml'

  # main database
  postgres:
    image: docker.io/library/postgres:15
    environment:
      POSTGRES_USER: klicker
      POSTGRES_PASSWORD: klicker
      POSTGRES_DB: klicker
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # redis instance to support session execution
  redis_exec:
    image: docker.io/library/redis:7
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  # redis instance for page caching and rate limiting
  redis_cache:
    image: docker.io/library/redis:7
    ports:
      - 6380:6379

volumes:
  postgres_data:
  redis_data:
