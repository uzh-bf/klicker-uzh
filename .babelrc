{
  "env":{
     "development":{
        "presets":[
           [
              "next/babel",
              {
                "preset-env": {
                  "targets":{
                    "browsers":[
                       "> 0.25%",
                       "not dead"
                    ]
                 }
                },
                 "styled-jsx":{
                    "plugins":[
                       "styled-jsx-plugin-sass"
                    ]
                 }
              }
           ]
        ],
        "plugins":[
           "@babel/plugin-proposal-do-expressions",
           "@babel/plugin-proposal-pipeline-operator",
           "@babel/plugin-proposal-optional-chaining",
           "inline-dotenv",
           "add-react-displayname"
        ]
     },
     "production":{
        "presets":[
           [
              "@babel/preset-env",
              {
                 "targets":{
                    "browsers":[
                       "> 0.25%",
                       "not dead"
                    ]
                 }
              }
           ],
           [
              "next/babel",
              {
                "preset-env": {
                  "targets":{
                    "browsers":[
                       "> 0.25%",
                       "not dead"
                    ]
                  }
                },
                "styled-jsx":{
                    "plugins":[
                       "styled-jsx-plugin-sass"
                    ]
                 }
              }
           ]
        ],
        "plugins":[
           [
              "lodash",
              {
                 "id":[
                    "lodash",
                    "recompose",
                    "semantic-ui-react",
                    "ramda"
                 ]
              }
           ],
           "@babel/plugin-proposal-do-expressions",
           "@babel/plugin-proposal-pipeline-operator",
           "@babel/plugin-proposal-optional-chaining",
           "transform-inline-environment-variables",
           "add-react-displayname",
           [
              "react-intl",
              {
                 "messagesDir":"src/lang/.messages"
              }
           ]
        ]
     },
     "test":{
        "presets":[
           [
              "next/babel",
              {
                "preset-env": {
                  "modules": "commonjs"
                },
                 "styled-jsx":{
                    "plugins":[
                       "styled-jsx-plugin-sass"
                    ]
                 }
              }
           ]
        ],
        "plugins":[
           "@babel/plugin-proposal-do-expressions",
           "@babel/plugin-proposal-pipeline-operator",
           "@babel/plugin-proposal-optional-chaining",
           "import-graphql"
        ]
     }
  }
}
