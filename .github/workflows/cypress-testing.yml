name: Klicker automated testing with cypress
on: 
  push:
    branches:
      - 'Klicker-Testing'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/backend-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: apps/backend-docker
          file: apps/backend-docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: cypress
          labels: ${{ steps.meta.outputs.labels }}

  build-frontend-manage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Replace .env.production with .env.cypress
        shell: bash
        run: |
          rm apps/frontend-manage/.env.production
          mv apps/frontend-manage/.env.cypress apps/frontend-manage/.env.production
          cp -R packages/shared-components apps/frontend-manage/shared-components

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/frontend-manage

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: apps/frontend-manage
          file: apps/frontend-manage/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: cypress
          labels: ${{ steps.meta.outputs.labels }}

  checkout-and-test:
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: run cypress tests with firefox
        uses: cypress-io/github-action@v4
        timeout-minutes: 10
        with:
          browser: firefox
