sudo: required

branches:
  only:
    - master
    - dev
    - /^v[0-9].[0-9].[0-9]$/
    - /^v[0-9].[0-9].[0-9]-/
    - /^v[0-9].[0-9]$/

jobs:
  include:
    # ensure correct formatting with prettier
    - &test-setup
      stage: test
      language: node_js
      node_js:
        - '12'
      cache: npm
      script:
        - npm run format:ci

    # run jest with test coverage for codeclimate
    # tests need an active instance of mongodb
    - <<: *test-setup
      services:
        - mongodb
        - redis
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - mv .env.travis .env
        - npm run test:ci
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    # build all commits to master
    # push a new latest tag to Docker Hub
    # => template for further docker build jobs
    - &build-setup
      stage: build
      if: (type = push) AND (branch = master)
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - IMAGE_NAME="uzhbf/klicker-api"
      before_script:
        - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin
      script:
        - travis_retry docker pull $IMAGE_NAME:latest
        - docker build . --cache-from $IMAGE_NAME:latest -t $IMAGE_NAME:latest
        - travis_retry docker push $IMAGE_NAME:latest

    # build all commits to master
    # push a new canary tag to OpenShift
    - <<: *build-setup
      if: (type = push) AND (branch = master)
      env:
        - USER="serviceaccount"
        - PASSWORD=$OC_TOKEN_SWITCH
        - REGISTRY="registry.zh.shift.switchengines.ch"
        - IMAGE_NAME="registry.zh.shift.switchengines.ch/klicker/klicker-api-stage"
      before_script:
        - echo $PASSWORD | docker login --username $USER --password-stdin $REGISTRY
      script:
        - travis_retry docker pull $IMAGE_NAME:canary
        - docker build . --cache-from $IMAGE_NAME:canary --build-arg VERSION=canary -t $IMAGE_NAME:canary
        - travis_retry docker push $IMAGE_NAME:canary

    # build all pull requests
    # push a nightly tag to Docker Hub
    - <<: *build-setup
      if: type = pull_request
      script:
        - travis_retry docker pull $IMAGE_NAME:nightly
        - >
          docker build .
          --cache-from $IMAGE_NAME:nightly
          --build-arg VERSION=nightly-$TRAVIS_PULL_REQUEST
          -t $IMAGE_NAME:nightly
          -t $IMAGE_NAME:nightly-$TRAVIS_PULL_REQUEST
        - travis_retry docker push $IMAGE_NAME:nightly
        - travis_retry docker push $IMAGE_NAME:nightly-$TRAVIS_PULL_REQUEST

    # build unstable tags (e.g. v1.0.0-beta.1)
    # push the tag to Docker Hub
    - <<: *build-setup
      if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]-/)
      script:
        - travis_retry docker pull $IMAGE_NAME:latest
        - docker build . --cache-from $IMAGE_NAME:latest --build-arg VERSION=$TRAVIS_TAG --cache-from $IMAGE_NAME:latest -t $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:$TRAVIS_TAG

    # build unstable tags (e.g. v1.0.0-beta.1)
    # push the tag to OpenShift
    - <<: *build-setup
      if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]-/)
      env:
        - USER="serviceaccount"
        - PASSWORD=$OC_TOKEN_SWITCH
        - REGISTRY="registry.zh.shift.switchengines.ch"
        - IMAGE_NAME="registry.zh.shift.switchengines.ch/klicker/klicker-api-stage"
      before_script:
        - echo $PASSWORD | docker login --username $USER --password-stdin $REGISTRY
      script:
        - travis_retry docker pull $IMAGE_NAME:canary
        - docker build . --cache-from $IMAGE_NAME:canary --build-arg VERSION=$TRAVIS_TAG -t $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:$TRAVIS_TAG

    # build stable tags (e.g. v1.0.0)
    # push a new stable tag to Docker Hub
    - <<: *build-setup
      if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]$/)
      script:
        - travis_retry docker pull $IMAGE_NAME:latest
        - docker build . --cache-from $IMAGE_NAME:latest --build-arg VERSION=$TRAVIS_TAG -t $IMAGE_NAME:stable -t $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:stable

    # build stable tags (e.g. v1.0.0)
    # push a new stable tag to OpenShift
    # => this will trigger a new deployment to production
    - <<: *build-setup
      if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]$/)
      env:
        - USER="serviceaccount"
        - PASSWORD=$OC_TOKEN_SWITCH
        - REGISTRY="registry.zh.shift.switchengines.ch"
        - IMAGE_NAME="registry.zh.shift.switchengines.ch/klicker/klicker-api-prod"
        - IMAGE_NAME_CANARY="registry.zh.shift.switchengines.ch/klicker/klicker-api-stage"
      before_script:
        - echo $PASSWORD | docker login --username $USER --password-stdin $REGISTRY
      script:
        - travis_retry docker pull $IMAGE_NAME_CANARY:canary
        - docker build . --cache-from $IMAGE_NAME_CANARY:canary --build-arg VERSION=$TRAVIS_TAG -t $IMAGE_NAME:stable -t $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:stable
        - >
          curl $SENTRY_WEBHOOK
          -X POST
          -H 'Content-Type: application/json'
          -d '{"version": $TRAVIS_TAG}'
