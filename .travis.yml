sudo: required

branches:
  only:
    - master
    - /^v[0-9].[0-9].[0-9]$/
    - /^v[0-9].[0-9].[0-9]-/

jobs:
  include:
    # run jest with test coverage for codeclimate
    - &test-setup
      stage: test
      language: node_js
      node_js:
        - "8"
      cache:
        yarn: true
        directories:
          - node_modules
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.7.0
        - export PATH="$HOME/.yarn/bin:$PATH"
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      script:
        - yarn test:ci
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    # ensure correct formatting with prettier
    - <<: *test-setup
      script:
        - yarn run format:ci

    - <<: *test-setup
      script:
        - yarn run build
        - yarn run bundlesize

    # build all merges into master that are not tagged
    # trigger a new staging deployment
    - &build-setup
      stage: build
      if: (type = push) AND (branch = master)
      addons:
        apt:
          packages:
            - docker-ce
      env:
        - IMAGE_NAME="uzhbf/klicker-react"
      before_script:
        - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin
      script:
        - docker pull $IMAGE_NAME:latest
        - >
          docker build .
          --build-arg API_ENDPOINT=$STAGING_ENDPOINT_URL
          --build-arg API_ENDPOINT_WS=$STAGING_API_ENDPOINT_WS
          --build-arg APP_PERSIST_QUERIES=$STAGING_APP_PERSIST_QUERIES
          --build-arg S3_ROOT_URL=$STAGING_S3_ROOT_URL
          --build-arg SERVICES_SENTRY_DSN=$STAGING_SERVICES_SENTRY_DSN
          --build-arg VERSION=$TRAVIS_TAG
          --cache-from $IMAGE_NAME:latest
          -t $IMAGE_NAME:latest
        - docker push $IMAGE_NAME:latest

    # build all pull requests
    # TODO: review app deployment
    - <<: *build-setup
      if: type = pull_request
      script:
        - docker pull $IMAGE_NAME:nightly
        - >
          docker build .
          --build-arg API_ENDPOINT=$STAGING_ENDPOINT_URL
          --build-arg API_ENDPOINT_WS=$STAGING_API_ENDPOINT_WS
          --build-arg APP_PERSIST_QUERIES=$STAGING_APP_PERSIST_QUERIES
          --build-arg S3_ROOT_URL=$STAGING_S3_ROOT_URL
          --build-arg SERVICES_SENTRY_DSN=$STAGING_SERVICES_SENTRY_DSN
          --build-arg VERSION=$TRAVIS_TAG
          --cache-from $IMAGE_NAME:nightly
          -t $IMAGE_NAME:nightly
          -t $IMAGE_NAME:nightly-$TRAVIS_PULL_REQUEST
        - docker push $IMAGE_NAME:nightly
        - docker push $IMAGE_NAME:nightly-$TRAVIS_PULL_REQUEST

    # build unstable tags (e.g. v1.0.0-beta.1)
    # TODO: activate this after 1.0.0
    # - <<: *build-setup
      # if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]-/)
      # script:
        # - docker pull $IMAGE_NAME:latest
        # - docker build --build-arg API_URL=$STAGING_API_URL --cache-from $IMAGE_NAME:latest -t $IMAGE_NAME:$TRAVIS_TAG .
        # - docker push $IMAGE_NAME:$TRAVIS_TAG

    # build stable tags (e.g. v1.0.0)
    # push into APPUiO registry and to Docker Hub
    # => will trigger a deployment on APPUiO
    # TODO: merge the following two jobs once matrix expansion works with stages
    - <<: *build-setup
      # TODO: activate this after 1.0.0
      # if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]$/)
      if: (type = push) AND (tag =~ /^v[1-9].[0-9].[0-9]/)
      env:
        - USER=$DOCKER_USER
        - PASSWORD=$DOCKER_PASSWORD
        - IMAGE_NAME="uzhbf/klicker-react"
      before_script:
        - echo $PASSWORD | docker login --username $USER --password-stdin
      script:
        - >
          docker build .
          --build-arg API_ENDPOINT=$PROD_API_ENDPOINT
          --build-arg API_ENDPOINT_WS=$PROD_API_ENDPOINT_WS
          --build-arg APP_PERSIST_QUERIES=$PROD_APP_PERSIST_QUERIES
          --build-arg S3_ROOT_URL=$PROD_S3_ROOT_URL
          --build-arg VERSION=$TRAVIS_TAG
          -t $IMAGE_NAME:stable
          -t $IMAGE_NAME:$TRAVIS_TAG
        - docker push $IMAGE_NAME:$TRAVIS_TAG
        - docker push $IMAGE_NAME:stable
    - <<: *build-setup
      # TODO: activate this after 1.0.0
      # if: (type = push) AND (tag =~ /^v[0-9].[0-9].[0-9]$/)
      if: (type = push) AND (tag =~ /^v[1-9].[0-9].[0-9]/)
      env:
        - USER="serviceaccount"
        - PASSWORD=$OC_TOKEN
        - REGISTRY="registry.appuio.ch"
        - IMAGE_NAME="registry.appuio.ch/uniz-klicker/klicker-react-prod"
      before_script:
        - echo $PASSWORD | docker login --username $USER --password-stdin $REGISTRY
      script:
        - >
          docker build .
          --build-arg API_ENDPOINT=$PROD_API_ENDPOINT
          --build-arg API_ENDPOINT_WS=$PROD_API_ENDPOINT_WS
          --build-arg APP_PERSIST_QUERIES=$PROD_APP_PERSIST_QUERIES
          --build-arg S3_ROOT_URL=$PROD_S3_ROOT_URL
          --build-arg SERVICES_GOOGLE_ANALYTICS_TRACKING_ID=$PROD_SERVICES_GOOGLE_ANALYTICS_TRACKING_ID
          --build-arg SERVICES_LOGROCKET_APP_ID=$PROD_SERVICES_LOGROCKET_APP_ID
          --build-arg SERVICES_SENTRY_DSN=$PROD_SERVICES_SENTRY_DSN
          --build-arg SERVICES_SLAASK_WIDGET_KEY=$PROD_SERVICES_SLAASK_WIDGET_KEY
          --build-arg VERSION=$TRAVIS_TAG
          -t $IMAGE_NAME:stable
          -t $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:$TRAVIS_TAG
        - travis_retry docker push $IMAGE_NAME:stable
        - >
          curl $SENTRY_WEBHOOK
          -X POST
          -H 'Content-Type: application/json'
          -d '{"version": $TRAVIS_TAG}'
