# extend the node alpine base
FROM node:16.13-alpine

# root application directory
ENV APP_DIR /app
ENV NODE_ENV="production"

# install tini
RUN set -x \
  && apk add --no-cache tini \
  && mkdir -p $APP_DIR/apps/frontend \
  && chown -R node:0 $APP_DIR

# switch to the node user (uid 1000)
# non-root as provided by the base image
USER node

# inject the application dependencies
WORKDIR $APP_DIR
COPY --chown=node:0 package.json package-lock.json $APP_DIR/
COPY --chown=node:0 apps/frontend/package.json apps/frontend/semantic.json $APP_DIR/apps/frontend/

# install packages for the specified environment
RUN set -x && npm ci

# inject application sources
WORKDIR $APP_DIR/apps/frontend
COPY --chown=node:0 apps/frontend/ $APP_DIR/apps/frontend/

# pre-build the nextjs sources
RUN set -x && npm run build

# run next in production mode
ENTRYPOINT ["/sbin/tini", "--"]
CMD ["node", "dist/src/server.js"]

# add labels
ARG VERSION="canary"
LABEL maintainer="Roland Schlaefli <roland.schlaefli@bf.uzh.ch>"
LABEL name="@klicker-uzh/frontend"
LABEL version=$VERSION

# expose the main application port
EXPOSE 3000

# setup a HEALTHCHECK
HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f http://localhost:3000/ || exit 1
