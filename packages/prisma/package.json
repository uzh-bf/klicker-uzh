{
  "name": "@klicker-uzh/prisma",
  "version": "3.0.0-rc.11",
  "license": "AGPL-3.0",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "dependencies": {
    "@prisma/client": "4.14.1"
  },
  "devDependencies": {
    "@pothos/plugin-prisma": "3.56.0",
    "@size-limit/preset-small-lib": "8.2.4",
    "@tsconfig/node18": "^2.0.1",
    "@tsconfig/recommended": "^1.0.2",
    "@types/bcryptjs": "^2.4.2",
    "@types/node": "^18.17.4",
    "@types/ramda": "^0.29.3",
    "bcryptjs": "2.4.3",
    "cross-env": "7.0.3",
    "dotenv": "16.0.3",
    "dotenv-cli": "7.2.1",
    "eslint": "8.45.0",
    "npm-run-all": "4.1.5",
    "prettier": "2.8.8",
    "prettier-plugin-organize-imports": "3.2.3",
    "prisma": "4.14.1",
    "ramda": "0.29.0",
    "size-limit": "8.2.4",
    "ts-node": "10.9.1",
    "tsup": "7.2.0",
    "typescript": "5.1.6",
    "uuidv4": "6.2.13"
  },
  "scripts": {
    "analyze": "size-limit --why",
    "build": "run-s generate build:ts build:copy",
    "build:copy": "node src/copy.js",
    "build:ts": "cross-env NODE_ENV=production tsup",
    "build:watch": "cross-env NODE_ENV=development tsup --watch",
    "check": "tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "generate": "prisma generate --schema=src/prisma/schema.prisma",
    "migrate:learningElements": "ENV=development doppler run --config dev -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/scripts/migrateLearningElements.ts",
    "migrate:learningElements:prod": "ENV=development doppler run --config prd -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/scripts/migrateLearningElements.ts",
    "prisma:deploy": "doppler run --config dev -- pnpm run prisma:deploy:raw",
    "prisma:deploy:prod": "doppler run --config prd -- pnpm run prisma:deploy:raw",
    "prisma:deploy:qa": "doppler run --config stg -- pnpm run prisma:deploy:raw",
    "prisma:deploy:raw": "prisma migrate deploy --schema=src/prisma/schema.prisma",
    "prisma:migrate": "doppler run --config dev -- prisma migrate dev --schema=src/prisma/schema.prisma",
    "prisma:migrate:create": "doppler run --config dev -- prisma migrate dev --schema=src/prisma/schema.prisma --create-only",
    "prisma:diff": "doppler run --config dev --command 'prisma migrate diff --from-url \"$PROD_DATABASE_URL\" --to-migrations src/prisma/migrations --shadow-database-url \"postgres://klicker:klicker@localhost:5432/shadow\"'",
    "prisma:push": "doppler run --config dev -- pnpm run prisma:push:raw",
    "prisma:push:qa": "doppler run --config stg -- pnpm run prisma:push:raw",
    "prisma:push:raw": "prisma db push --schema=src/prisma/schema.prisma",
    "prisma:reset": "doppler run --config dev -- pnpm run prisma:reset:raw",
    "prisma:reset:qa": "doppler run --config stg -- pnpm run prisma:reset:raw",
    "prisma:reset:raw": "prisma migrate reset --schema=src/prisma/schema.prisma --skip-seed",
    "prisma:reset:seed": "doppler run --config dev -- prisma migrate reset --schema=src/prisma/schema.prisma",
    "prisma:resetCypress": "pnpm run prisma:reset:raw",
    "prisma:resolve:prod": "doppler run --config prd -- prisma migrate resolve --schema=src/prisma/schema.prisma",
    "prisma:setup": "run-s prisma:reset prisma:push seed",
    "prisma:studio": "doppler run --config dev -- pnpm run prisma:studio:raw",
    "prisma:studio:prod": "doppler run --config prd -- pnpm run prisma:studio:raw",
    "prisma:studio:qa": "doppler run --config stg -- pnpm run prisma:studio:raw",
    "prisma:studio:raw": "prisma studio --schema=src/prisma/schema.prisma",
    "seed": "ENV=development doppler run --config dev -- run-s build seed:test",
    "seed:achievements": "ENV=development doppler run --config dev -- ts-node --esm --experimental-specifier-resolution=node src/data/seedAchievements.ts",
    "seed:importQuestions": "cp ../../legacy/db/exported_questions.json ./src/data/exported_questions.json && ENV=development doppler run --config dev -- ts-node --esm --experimental-specifier-resolution=node src/data/importQuestions.ts",
    "seed:mockExamPoints": "ENV=production doppler run --config prd -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/scripts/parseMockExamPoints.ts",
    "seed:prod": "ENV=production doppler run --config prd -- npm-run-all seed:prod:bf1 seed:prod:ami",
    "seed:prod:achievements": "ENV=production doppler run --config prd -- ts-node --esm --experimental-specifier-resolution=node src/data/seedAchievements.ts",
    "seed:prod:ami": "pnpm run seed:qa:ami",
    "seed:prod:bf1": "ENV=development doppler run --config prd -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/data/seedBF1.ts",
    "seed:prod:bf2": "ENV=development doppler run --config prd -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/data/seedBF2.ts",
    "seed:prod:importQuestions": "cp ../../legacy/db/exported_questions.json ./src/data/exported_questions.json && ENV=development doppler run --config prd -- ts-node --esm --experimental-specifier-resolution=node src/data/importQuestions.ts",
    "seed:prod:levels": "ENV=production doppler run --config prd -- ts-node --esm --experimental-specifier-resolution=node src/data/seedLevels.ts",
    "seed:prod:summerSchool": "ENV=production doppler run --config prd -- ts-node --esm --experimental-specifier-resolution=node src/data/seedSummerSchool.ts",
    "seed:prod:user": "ENV=production doppler run --config prd -- ts-node --esm --experimental-specifier-resolution=node src/data/seedUser.ts",
    "seed:qa": "ENV=development doppler run --config stg -- npm-run-all seed:qa:test",
    "seed:qa:bf1": "ENV=development doppler run --config stg -- ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/data/seedBF1.ts",
    "seed:qa:test": "ts-node --esm --experimental-specifier-resolution=node src/data/seedTEST.ts",
    "seed:test": "ENV=development ts-node -r dotenv/config --esm --experimental-specifier-resolution=node src/data/seedTEST.ts",
    "size": "size-limit"
  },
  "engines": {
    "node": "=18"
  },
  "volta": {
    "extends": "../../package.json"
  },
  "prisma": {
    "seed": "pnpm run seed"
  },
  "size-limit": [
    {
      "path": "dist/index.js",
      "limit": "10 KB"
    }
  ]
}
