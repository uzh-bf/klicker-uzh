{
  "name": "@klicker-uzh/prisma",
  "version": "3.2.0-alpha.31",
  "license": "AGPL-3.0",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "peerDependencies": {
    "@klicker-uzh/util": "workspace:*"
  },
  "dependencies": {
    "@prisma/client": "5.19.1"
  },
  "devDependencies": {
    "@klicker-uzh/transactional": "workspace:*",
    "@pothos/plugin-prisma": "3.60.0",
    "@size-limit/preset-small-lib": "8.2.4",
    "@types/bcryptjs": "^2.4.2",
    "@types/node": "^20.16.1",
    "@types/ramda": "^0.29.3",
    "@types/turndown": "^5.0.4",
    "@types/uuid": "^9.0.8",
    "@types/xml2js": "^0.4.14",
    "bcryptjs": "2.4.3",
    "cross-env": "7.0.3",
    "dotenv": "16.4.5",
    "dotenv-cli": "7.2.1",
    "eslint": "8.45.0",
    "fs-extra": "11.1.1",
    "npm-run-all": "4.1.5",
    "p-map": "7.0.2",
    "prisma": "5.19.1",
    "prisma-json-types-generator": "3.0.4",
    "ramda": "0.29.0",
    "tsup": "8.3.0",
    "tsx": "4.19.1",
    "turndown": "7.1.2",
    "typescript": "5.6.2",
    "uuid": "9.0.1",
    "uuidv4": "6.2.13",
    "xml2js": "0.6.2"
  },
  "scripts": {
    "analyze": "size-limit --why",
    "build": "run-s generate build:copy",
    "build:copy": "node src/copy.cjs",
    "build:test": "pnpm run build",
    "check": "tsc --noEmit",
    "generate": "prisma generate --schema=src/prisma/schema",
    "prisma:deploy": "doppler run --config dev -- pnpm run prisma:deploy:raw",
    "prisma:deploy:prod": "doppler run --config prd -- pnpm run prisma:deploy:raw",
    "prisma:deploy:qa": "doppler run --config stg -- pnpm run prisma:deploy:raw",
    "prisma:deploy:raw": "prisma migrate deploy --schema=src/prisma/schema",
    "prisma:diff": "doppler run --config dev --command 'prisma migrate diff --from-url \"$PROD_DATABASE_URL\" --to-migrations src/prisma/migrations --shadow-database-url \"postgres://klicker:klicker@localhost:5432/shadow\"'",
    "prisma:migrate": "doppler run --config dev -- prisma migrate dev --schema=src/prisma/schema",
    "prisma:migrate:create": "doppler run --config dev -- prisma migrate dev --schema=src/prisma/schema --create-only",
    "prisma:push": "doppler run --config dev -- pnpm run prisma:push:raw",
    "prisma:push:qa": "doppler run --config stg -- pnpm run prisma:push:raw",
    "prisma:push:raw": "prisma db push --schema=src/prisma/schema",
    "prisma:reset": "doppler run --config dev -- pnpm run prisma:reset:raw",
    "prisma:reset:yes": "doppler run --config dev -- pnpm run prisma:reset:raw -f",
    "prisma:reset:qa": "doppler run --config stg -- pnpm run prisma:reset:raw",
    "prisma:reset:raw": "prisma migrate reset --schema=src/prisma/schema --skip-seed",
    "prisma:reset:seed": "doppler run --config dev -- prisma migrate reset --schema=src/prisma/schema",
    "prisma:resetCypress": "pnpm run prisma:reset:raw",
    "prisma:resolve:prod": "doppler run --config prd -- prisma migrate resolve --schema=src/prisma/schema",
    "prisma:setup": "run-s prisma:reset prisma:push seed",
    "prisma:setup:yes": "run-s prisma:reset:yes prisma:push seed",
    "prisma:studio": "doppler run --config dev -- pnpm run prisma:studio:raw",
    "prisma:studio:prod": "doppler run --config prd -- pnpm run prisma:studio:raw",
    "prisma:studio:qa": "doppler run --config stg -- pnpm run prisma:studio:raw",
    "prisma:studio:raw": "prisma studio --schema=src/prisma/schema",
    "script": "ENV=development doppler run --config dev -- tsx",
    "script:qa": "ENV=development doppler run --config stg -- tsx",
    "script:prod": "ENV=production doppler run --config prd -- tsx",
    "seed": "ENV=development doppler run --config dev -- run-s build seed:test",
    "seed:achievements": "ENV=development doppler run --config dev tsx src/data/seedAchievements.ts",
    "seed:prod:achievements": "ENV=production doppler run --config prd -- tsx src/data/seedAchievements.ts",
    "seed:flashcards": "ENV=development doppler run --config dev tsx src/data/seedFlashcards.ts",
    "seed:prod:flashcards": "ENV=development doppler run --config prd -- tsx src/data/seedFlashcards.ts",
    "seed:prod:repetitionPool": "ENV=development doppler run --config prd -- tsx src/data/seedRepetitionPool.ts",
    "seed:qa": "ENV=development doppler run --config stg -- tsx src/data/seedTEST.ts",
    "seed:test": "ENV=development tsx src/data/seedTEST.ts",
    "size": "size-limit"
  },
  "engines": {
    "node": "=20"
  },
  "volta": {
    "extends": "../../package.json"
  },
  "prisma": {
    "seed": "pnpm run seed"
  }
}
